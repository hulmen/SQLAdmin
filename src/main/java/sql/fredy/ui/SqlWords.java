/**
 * This Class is part of Fredy's SQL-Admin Tool.
 *
 * Admin is a Tool around JDBC-enabled SQL-Databases to do basic jobs for
 * DB-Administrations, like: - create/ drop tables - create indices - perform
 * sql-statements - simple form - a guided query - Data Export and a other
 * usefull things in DB-arena
 *
 * Admin (Version see below) Copyright (c) 1999 Fredy Fischer sql@hulmen.ch
 *
 * Fredy Fischer Hulmenweg 36 8405 Winterthur Switzerland
 *
 *
 * The icons used in this application are from Dean S. Jones
 *
 * Icons Copyright(C) 1998 by Dean S. Jones dean@gallant.com
 * www.gallant.com/icons.htm
 *
 * CalendarBean is Copyright (c) by Kai Toedter
 *
 * MSeries is Copyright (c) by Martin Newstead
 *
 * POI is from the Apache Foundation
 *
 *
 * Copyright (c) 2017 Fredy Fischer, sql@hulmen.ch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */
package sql.fredy.ui;

import java.util.ArrayList;
import java.util.Iterator;

public class SqlWords {

    private ArrayList<String> sqlWords;
    public Iterator sqlWordsIterator;

    public SqlWords() {
        sqlWords = new ArrayList();

        /*  Replaced by new Version, 2024-10-16
        sqlWords.add("ADD");
        sqlWords.add("ALL");
        sqlWords.add("ALLOCATE");
        sqlWords.add("ALTER");
        sqlWords.add("AND");
        sqlWords.add("ANY");
        sqlWords.add("ARE");
        sqlWords.add("ARRAY");
        sqlWords.add("AS");
        sqlWords.add("ASENSITIVE");
        sqlWords.add("ASYMMETRIC");
        sqlWords.add("AT");
        sqlWords.add("ATOMIC");
        sqlWords.add("AUTHORIZATION");
        sqlWords.add("BEGIN");
        sqlWords.add("BETWEEN");
        sqlWords.add("BIGINT");
        sqlWords.add("BINARY");
        sqlWords.add("BLOB");
        sqlWords.add("BOOLEAN");
        sqlWords.add("BOTH");
        sqlWords.add("BULK");
        sqlWords.add("BY");
        sqlWords.add("CALL");
        sqlWords.add("CALLED");
        sqlWords.add("CASCADED");
        sqlWords.add("CASE");
        sqlWords.add("CAST");
        sqlWords.add("CHAR");
        sqlWords.add("CHARACTER");
        sqlWords.add("CHECK");
        sqlWords.add("CLOB");
        sqlWords.add("CLOSE");
        sqlWords.add("COLLATE");
        sqlWords.add("COLUMN");
        sqlWords.add("COMMIT");
        sqlWords.add("CONDITION");
        sqlWords.add("CONNECT");
        sqlWords.add("CONSTRAINT");
        sqlWords.add("CONTINUE");
        sqlWords.add("CORRESPONDING");
        sqlWords.add("CREATE");
        sqlWords.add("CROSS");
        sqlWords.add("CUBE");
        sqlWords.add("CURRENT");
        sqlWords.add("CURRENT_DATE");
        sqlWords.add("CURRENT_DEFAULT_TRANSFORM_GROUP");
        sqlWords.add("CURRENT_PATH");
        sqlWords.add("CURRENT_ROLE");
        sqlWords.add("CURRENT_TIME");
        sqlWords.add("CURRENT_TIMESTAMP");
        sqlWords.add("CURRENT_TRANSFORM_GROUP_FOR_TYPE");
        sqlWords.add("CURRENT_USER");
        sqlWords.add("CURSOR");
        sqlWords.add("CYCLE");
        sqlWords.add("DATE");
        sqlWords.add("DAY");
        sqlWords.add("DEALLOCATE");
        sqlWords.add("DEC");
        sqlWords.add("DECIMAL");
        sqlWords.add("DECLARE");
        sqlWords.add("DEFAULT");
        sqlWords.add("DELETE");
        sqlWords.add("DEREF");
        sqlWords.add("DESCRIBE");
        sqlWords.add("DETERMINISTIC");
        sqlWords.add("DISCONNECT");
        sqlWords.add("DISTINCT");
        sqlWords.add("DO");
        sqlWords.add("DOUBLE");
        sqlWords.add("DROP");
        sqlWords.add("DYNAMIC");
        sqlWords.add("EACH");
        sqlWords.add("ELEMENT");
        sqlWords.add("ELSE");
        sqlWords.add("ELSEIF");
        sqlWords.add("END");
        sqlWords.add("ESCAPE");
        sqlWords.add("EXCEPT");
        sqlWords.add("EXEC");
        sqlWords.add("EXECUTE");
        sqlWords.add("EXISTS");
        sqlWords.add("EXIT");
        sqlWords.add("EXTERNAL");
        sqlWords.add("FALSE");
        sqlWords.add("FETCH");
        sqlWords.add("FILTER");
        sqlWords.add("FLOAT");
        sqlWords.add("FOR");
        sqlWords.add("FOREIGN");
        sqlWords.add("FREE");
        sqlWords.add("FROM");
        sqlWords.add("FULL");
        sqlWords.add("FUNCTION");
        sqlWords.add("GET");
        sqlWords.add("GLOBAL");
        sqlWords.add("GRANT");
        sqlWords.add("GROUP");
        sqlWords.add("GROUPING");
        sqlWords.add("HANDLER");
        sqlWords.add("HAVING");
        sqlWords.add("HOLD");
        sqlWords.add("HOUR");
        sqlWords.add("IDENTITY");
        sqlWords.add("IF");
        sqlWords.add("IMMEDIATE");
        sqlWords.add("IN");
        sqlWords.add("INDICATOR");
        sqlWords.add("INNER");
        sqlWords.add("INOUT");
        sqlWords.add("INPUT");
        sqlWords.add("INSENSITIVE");
        sqlWords.add("INSERT");
        sqlWords.add("INT");
        sqlWords.add("INTEGER");
        sqlWords.add("INTERSECT");
        sqlWords.add("INTERVAL");
        sqlWords.add("INTO");
        sqlWords.add("IS");
        sqlWords.add("ITERATE");
        sqlWords.add("JOIN");
        sqlWords.add("LANGUAGE");
        sqlWords.add("LARGE");
        sqlWords.add("LATERAL");
        sqlWords.add("LEADING");
        sqlWords.add("LEAVE");
        sqlWords.add("LEFT");
        sqlWords.add("LIKE");
        sqlWords.add("LOCAL");
        sqlWords.add("LOCALTIME");
        sqlWords.add("LOCALTIMESTAMP");
        sqlWords.add("LOOP");
        sqlWords.add("MATCH");
        sqlWords.add("MEMBER");
        sqlWords.add("MERGE");
        sqlWords.add("METHOD");
        sqlWords.add("MINUTE");
        sqlWords.add("MODIFIES");
        sqlWords.add("MODULE");
        sqlWords.add("MONTH");
        sqlWords.add("MULTISET");
        sqlWords.add("NATIONAL");
        sqlWords.add("NATURAL");
        sqlWords.add("NCHAR");
        sqlWords.add("NCLOB");
        sqlWords.add("NEW");
        sqlWords.add("NO");
        sqlWords.add("NONE");
        sqlWords.add("NOT");
        sqlWords.add("NULL");
        sqlWords.add("NUMERIC");
        sqlWords.add("OF");
        sqlWords.add("OLD");
        sqlWords.add("ON");
        sqlWords.add("ONLY");
        sqlWords.add("OPEN");
        sqlWords.add("OR");
        sqlWords.add("ORDER");
        sqlWords.add("OUT");
        sqlWords.add("OUTER");
        sqlWords.add("OUTPUT");
        sqlWords.add("OVER");
        sqlWords.add("OVERLAPS");
        sqlWords.add("PARAMETER");
        sqlWords.add("PARTITION");
        sqlWords.add("PRECISION");
        sqlWords.add("PREPARE");
        sqlWords.add("PRIMARY");
        sqlWords.add("PROCEDURE");
        sqlWords.add("RANGE");
        sqlWords.add("READS");
        sqlWords.add("REAL");
        sqlWords.add("RECURSIVE");
        sqlWords.add("REF");
        sqlWords.add("REFERENCES");
        sqlWords.add("REFERENCING");
        sqlWords.add("RELEASE");
        sqlWords.add("REPEAT");
        sqlWords.add("RESIGNAL");
        sqlWords.add("RESULT");
        sqlWords.add("RETURN");
        sqlWords.add("RETURNS");
        sqlWords.add("REVOKE");
        sqlWords.add("RIGHT");
        sqlWords.add("ROLLBACK");
        sqlWords.add("ROLLUP");
        sqlWords.add("ROW");
        sqlWords.add("ROWS");
        sqlWords.add("SAVEPOINT");
        sqlWords.add("SCOPE");
        sqlWords.add("SCROLL");
        sqlWords.add("SEARCH");
        sqlWords.add("SECOND");
        sqlWords.add("SELECT");
        sqlWords.add("SENSITIVE");
        sqlWords.add("SESSION_USER");
        sqlWords.add("SET");
        sqlWords.add("SIGNAL");
        sqlWords.add("SIMILAR");
        sqlWords.add("SMALLINT");
        sqlWords.add("SOME");
        sqlWords.add("SPECIFIC");
        sqlWords.add("SPECIFICTYPE");
        sqlWords.add("SQL");
        sqlWords.add("SQLEXCEPTION");
        sqlWords.add("SQLSTATE");
        sqlWords.add("SQLWARNING");
        sqlWords.add("START");
        sqlWords.add("STATIC");
        sqlWords.add("SUBMULTISET");
        sqlWords.add("SYMMETRIC");
        sqlWords.add("SYSTEM");
        sqlWords.add("SYSTEM_USER");
        sqlWords.add("TABLE");
        sqlWords.add("TABLESAMPLE");
        sqlWords.add("THEN");
        sqlWords.add("TIME");
        sqlWords.add("TIMESTAMP");
        sqlWords.add("TIMEZONE_HOUR");
        sqlWords.add("TIMEZONE_MINUTE");
        sqlWords.add("TO");
        sqlWords.add("TRAILING");
        sqlWords.add("TRANSLATION");
        sqlWords.add("TREAT");
        sqlWords.add("TRIGGER");
        sqlWords.add("TRUE");
        sqlWords.add("UNDO");
        sqlWords.add("UNION");
        sqlWords.add("UNIQUE");
        sqlWords.add("UNKNOWN");
        sqlWords.add("UNNEST");
        sqlWords.add("UNTIL");
        sqlWords.add("UPDATE");
        sqlWords.add("USER");
        sqlWords.add("USING");
        sqlWords.add("VALUE");
        sqlWords.add("VALUES");
        sqlWords.add("VARCHAR");
        sqlWords.add("VARYING");
        sqlWords.add("WHEN");
        sqlWords.add("WHENEVER");
        sqlWords.add("WHERE");
        sqlWords.add("WHILE");
        sqlWords.add("WINDOW");
        sqlWords.add("WITH");
        sqlWords.add("WITHIN");
        sqlWords.add("WITHOUT");
        sqlWords.add("YEAR");
         */
        sqlWords.add("ABORT");
        sqlWords.add("ABS");
        sqlWords.add("ABSOLUTE");
        sqlWords.add("ACCESS");
        sqlWords.add("ACTION");
        sqlWords.add("ADA");
        sqlWords.add("ADD");
        sqlWords.add("ADMIN");
        sqlWords.add("AFTER");
        sqlWords.add("AGGREGATE");
        sqlWords.add("ALIAS");
        sqlWords.add("ALL");
        sqlWords.add("ALLOCATE");
        sqlWords.add("ALSO");
        sqlWords.add("ALTER");
        sqlWords.add("ALWAYS");
        sqlWords.add("ANALYSE");
        sqlWords.add("ANALYZE");
        sqlWords.add("AND");
        sqlWords.add("ANY");
        sqlWords.add("ARE");
        sqlWords.add("ARRAY");
        sqlWords.add("AS");
        sqlWords.add("ASC");
        sqlWords.add("ASENSITIVE");
        sqlWords.add("ASSERTION");
        sqlWords.add("ASSIGNMENT");
        sqlWords.add("ASYMMETRIC");
        sqlWords.add("AT");
        sqlWords.add("ATOMIC");
        sqlWords.add("ATTRIBUTE");
        sqlWords.add("ATTRIBUTES");
        sqlWords.add("AUDIT");
        sqlWords.add("AUTHORIZATION");
        sqlWords.add("AUTO_INCREMENT");
        sqlWords.add("AVG");
        sqlWords.add("AVG_ROW_LENGTH");
        sqlWords.add("BACKUP");
        sqlWords.add("BACKWARD");
        sqlWords.add("BEFORE");
        sqlWords.add("BEGIN");
        sqlWords.add("BERNOULLI");
        sqlWords.add("BETWEEN");
        sqlWords.add("BIGINT");
        sqlWords.add("BINARY");
        sqlWords.add("BIT");
        sqlWords.add("BIT_LENGTH");
        sqlWords.add("BITVAR");
        sqlWords.add("BLOB");
        sqlWords.add("BOOL");
        sqlWords.add("BOOLEAN");
        sqlWords.add("BOTH");
        sqlWords.add("BREADTH");
        sqlWords.add("BREAK");
        sqlWords.add("BROWSE");
        sqlWords.add("BULK");
        sqlWords.add("BY");
        sqlWords.add("CACHE");
        sqlWords.add("CALL");
        sqlWords.add("CALLED");
        sqlWords.add("CARDINALITY");
        sqlWords.add("CASCADE");
        sqlWords.add("CASCADED");
        sqlWords.add("CASE");
        sqlWords.add("CAST");
        sqlWords.add("CATALOG");
        sqlWords.add("CATALOG_NAME");
        sqlWords.add("CEIL");
        sqlWords.add("CEILING");
        sqlWords.add("CHAIN");
        sqlWords.add("CHANGE");
        sqlWords.add("CHAR");
        sqlWords.add("CHAR_LENGTH");
        sqlWords.add("CHARACTER");
        sqlWords.add("CHARACTER_LENGTH");
        sqlWords.add("CHARACTER_SET_CATALOG");
        sqlWords.add("CHARACTER_SET_NAME");
        sqlWords.add("CHARACTER_SET_SCHEMA");
        sqlWords.add("CHARACTERISTICS");
        sqlWords.add("CHARACTERS");
        sqlWords.add("CHECK");
        sqlWords.add("CHECKED");
        sqlWords.add("CHECKPOINT");
        sqlWords.add("CHECKSUM");
        sqlWords.add("CLASS");
        sqlWords.add("CLASS_ORIGIN");
        sqlWords.add("CLOB");
        sqlWords.add("CLOSE");
        sqlWords.add("CLUSTER");
        sqlWords.add("CLUSTERED");
        sqlWords.add("COALESCE");
        sqlWords.add("COBOL");
        sqlWords.add("COLLATE");
        sqlWords.add("COLLATION");
        sqlWords.add("COLLATION_CATALOG");
        sqlWords.add("COLLATION_NAME");
        sqlWords.add("COLLATION_SCHEMA");
        sqlWords.add("COLLECT");
        sqlWords.add("COLUMN");
        sqlWords.add("COLUMN_NAME");
        sqlWords.add("COLUMNS");
        sqlWords.add("COMMAND_FUNCTION");
        sqlWords.add("COMMAND_FUNCTION_CODE");
        sqlWords.add("COMMENT");
        sqlWords.add("COMMIT");
        sqlWords.add("COMMITTED");
        sqlWords.add("COMPLETION");
        sqlWords.add("COMPRESS");
        sqlWords.add("COMPUTE");
        sqlWords.add("CONDITION");
        sqlWords.add("CONDITION_NUMBER");
        sqlWords.add("CONNECT");
        sqlWords.add("CONNECTION");
        sqlWords.add("CONNECTION_NAME");
        sqlWords.add("CONSTRAINT");
        sqlWords.add("CONSTRAINT_CATALOG");
        sqlWords.add("CONSTRAINT_NAME");
        sqlWords.add("CONSTRAINT_SCHEMA");
        sqlWords.add("CONSTRAINTS");
        sqlWords.add("CONSTRUCTOR");
        sqlWords.add("CONTAINS");
        sqlWords.add("CONTAINSTABLE");
        sqlWords.add("CONTINUE");
        sqlWords.add("CONVERSION");
        sqlWords.add("CONVERT");
        sqlWords.add("COPY");
        sqlWords.add("CORR");
        sqlWords.add("CORRESPONDING");
        sqlWords.add("COUNT");
        sqlWords.add("COVAR_POP");
        sqlWords.add("COVAR_SAMP");
        sqlWords.add("CREATE");
        sqlWords.add("CREATEDB");
        sqlWords.add("CREATEROLE");
        sqlWords.add("CREATEUSER");
        sqlWords.add("CROSS");
        sqlWords.add("CSV");
        sqlWords.add("CUBE");
        sqlWords.add("CUME_DIST");
        sqlWords.add("CURRENT");
        sqlWords.add("CURRENT_DATE");
        sqlWords.add("CURRENT_DEFAULT_TRANSFORM_GROUP");
        sqlWords.add("CURRENT_PATH");
        sqlWords.add("CURRENT_ROLE");
        sqlWords.add("CURRENT_TIME");
        sqlWords.add("CURRENT_TIMESTAMP");
        sqlWords.add("CURRENT_TRANSFORM_GROUP_FOR_TYPE");
        sqlWords.add("CURRENT_USER");
        sqlWords.add("CURSOR");
        sqlWords.add("CURSOR_NAME");
        sqlWords.add("CYCLE");
        sqlWords.add("DATA");
        sqlWords.add("DATABASE");
        sqlWords.add("DATABASES");
        sqlWords.add("DATE");
        sqlWords.add("DATETIME");
        sqlWords.add("DATETIME_INTERVAL_CODE");
        sqlWords.add("DATETIME_INTERVAL_PRECISION");
        sqlWords.add("DAY");
        sqlWords.add("DAY_HOUR");
        sqlWords.add("DAY_MICROSECOND");
        sqlWords.add("DAY_MINUTE");
        sqlWords.add("DAY_SECOND");
        sqlWords.add("DAYOFMONTH");
        sqlWords.add("DAYOFWEEK");
        sqlWords.add("DAYOFYEAR");
        sqlWords.add("DBCC");
        sqlWords.add("DEALLOCATE");
        sqlWords.add("DEC");
        sqlWords.add("DECIMAL");
        sqlWords.add("DECLARE");
        sqlWords.add("DEFAULT");
        sqlWords.add("DEFAULTS");
        sqlWords.add("DEFERRABLE");
        sqlWords.add("DEFERRED");
        sqlWords.add("DEFINED");
        sqlWords.add("DEFINER");
        sqlWords.add("DEGREE");
        sqlWords.add("DELAY_KEY_WRITE");
        sqlWords.add("DELAYED");
        sqlWords.add("DELETE");
        sqlWords.add("DELIMITER");
        sqlWords.add("DELIMITERS");
        sqlWords.add("DENSE_RANK");
        sqlWords.add("DENY");
        sqlWords.add("DEPTH");
        sqlWords.add("DEREF");
        sqlWords.add("DERIVED");
        sqlWords.add("DESC");
        sqlWords.add("DESCRIBE");
        sqlWords.add("DESCRIPTOR");
        sqlWords.add("DESTROY");
        sqlWords.add("DESTRUCTOR");
        sqlWords.add("DETERMINISTIC");
        sqlWords.add("DIAGNOSTICS");
        sqlWords.add("DICTIONARY");
        sqlWords.add("DISABLE");
        sqlWords.add("DISCONNECT");
        sqlWords.add("DISK");
        sqlWords.add("DISPATCH");
        sqlWords.add("DISTINCT");
        sqlWords.add("DISTINCTROW");
        sqlWords.add("DISTRIBUTED");
        sqlWords.add("DIV");
        sqlWords.add("DO");
        sqlWords.add("DOMAIN");
        sqlWords.add("DOUBLE");
        sqlWords.add("DROP");
        sqlWords.add("DUAL");
        sqlWords.add("DUMMY");
        sqlWords.add("DUMP");
        sqlWords.add("DYNAMIC");
        sqlWords.add("DYNAMIC_FUNCTION");
        sqlWords.add("DYNAMIC_FUNCTION_CODE");
        sqlWords.add("EACH");
        sqlWords.add("ELEMENT");
        sqlWords.add("ELSE");
        sqlWords.add("ELSEIF");
        sqlWords.add("ENABLE");
        sqlWords.add("ENCLOSED");
        sqlWords.add("ENCODING");
        sqlWords.add("ENCRYPTED");
        sqlWords.add("END");
        sqlWords.add("END-EXEC");
        sqlWords.add("ENUM");
        sqlWords.add("EQUALS");
        sqlWords.add("ERRLVL");
        sqlWords.add("ESCAPE");
        sqlWords.add("ESCAPED");
        sqlWords.add("EVERY");
        sqlWords.add("EXCEPT");
        sqlWords.add("EXCEPTION");
        sqlWords.add("EXCLUDE");
        sqlWords.add("EXCLUDING");
        sqlWords.add("EXCLUSIVE");
        sqlWords.add("EXEC");
        sqlWords.add("EXECUTE");
        sqlWords.add("EXISTING");
        sqlWords.add("EXISTS");
        sqlWords.add("EXIT");
        sqlWords.add("EXP");
        sqlWords.add("EXPLAIN");
        sqlWords.add("EXTERNAL");
        sqlWords.add("EXTRACT");
        sqlWords.add("FALSE");
        sqlWords.add("FETCH");
        sqlWords.add("FIELDS");
        sqlWords.add("FILE");
        sqlWords.add("FILLFACTOR");
        sqlWords.add("FILTER");
        sqlWords.add("FINAL");
        sqlWords.add("FIRST");
        sqlWords.add("FLOAT");
        sqlWords.add("FLOAT4");
        sqlWords.add("FLOAT8");
        sqlWords.add("FLOOR");
        sqlWords.add("FLUSH");
        sqlWords.add("FOLLOWING");
        sqlWords.add("FOR");
        sqlWords.add("FORCE");
        sqlWords.add("FOREIGN");
        sqlWords.add("FORTRAN");
        sqlWords.add("FORWARD");
        sqlWords.add("FOUND");
        sqlWords.add("FREE");
        sqlWords.add("FREETEXT");
        sqlWords.add("FREETEXTTABLE");
        sqlWords.add("FREEZE");
        sqlWords.add("FROM");
        sqlWords.add("FULL");
        sqlWords.add("FULLTEXT");
        sqlWords.add("FUNCTION");
        sqlWords.add("FUSION");
        sqlWords.add("GENERAL");
        sqlWords.add("GENERATED");
        sqlWords.add("GET");
        sqlWords.add("GLOBAL");
        sqlWords.add("GO");
        sqlWords.add("GOTO");
        sqlWords.add("GRANT");
        sqlWords.add("GRANTED");
        sqlWords.add("GRANTS");
        sqlWords.add("GREATEST");
        sqlWords.add("GROUP");
        sqlWords.add("GROUPING");
        sqlWords.add("HANDLER");
        sqlWords.add("HAVING");
        sqlWords.add("HEADER");
        sqlWords.add("HEAP");
        sqlWords.add("HIERARCHY");
        sqlWords.add("HIGH_PRIORITY");
        sqlWords.add("HOLD");
        sqlWords.add("HOLDLOCK");
        sqlWords.add("HOST");
        sqlWords.add("HOSTS");
        sqlWords.add("HOUR");
        sqlWords.add("HOUR_MICROSECOND");
        sqlWords.add("HOUR_MINUTE");
        sqlWords.add("HOUR_SECOND");
        sqlWords.add("IDENTIFIED");
        sqlWords.add("IDENTITY");
        sqlWords.add("IDENTITY_INSERT");
        sqlWords.add("IDENTITYCOL");
        sqlWords.add("IF");
        sqlWords.add("IGNORE");
        sqlWords.add("ILIKE");
        sqlWords.add("IMMEDIATE");
        sqlWords.add("IMMUTABLE");
        sqlWords.add("IMPLEMENTATION");
        sqlWords.add("IMPLICIT");
        sqlWords.add("IN");
        sqlWords.add("INCLUDE");
        sqlWords.add("INCLUDING");
        sqlWords.add("INCREMENT");
        sqlWords.add("INDEX");
        sqlWords.add("INDICATOR");
        sqlWords.add("INFILE");
        sqlWords.add("INFIX");
        sqlWords.add("INHERIT");
        sqlWords.add("INHERITS");
        sqlWords.add("INITIAL");
        sqlWords.add("INITIALIZE");
        sqlWords.add("INITIALLY");
        sqlWords.add("INNER");
        sqlWords.add("INOUT");
        sqlWords.add("INPUT");
        sqlWords.add("INSENSITIVE");
        sqlWords.add("INSERT");
        sqlWords.add("INSERT_ID");
        sqlWords.add("INSTANCE");
        sqlWords.add("INSTANTIABLE");
        sqlWords.add("INSTEAD");
        sqlWords.add("INT");
        sqlWords.add("INT1");
        sqlWords.add("INT2");
        sqlWords.add("INT3");
        sqlWords.add("INT4");
        sqlWords.add("INT8");
        sqlWords.add("INTEGER");
        sqlWords.add("INTERSECT");
        sqlWords.add("INTERSECTION");
        sqlWords.add("INTERVAL");
        sqlWords.add("INTO");
        sqlWords.add("INVOKER");
        sqlWords.add("IS");
        sqlWords.add("ISAM");
        sqlWords.add("ISNULL");
        sqlWords.add("ISOLATION");
        sqlWords.add("ITERATE");
        sqlWords.add("JOIN");
        sqlWords.add("KEY");
        sqlWords.add("KEY_MEMBER");
        sqlWords.add("KEY_TYPE");
        sqlWords.add("KEYS");
        sqlWords.add("KILL");
        sqlWords.add("LANCOMPILER");
        sqlWords.add("LANGUAGE");
        sqlWords.add("LARGE");
        sqlWords.add("LAST");
        sqlWords.add("LAST_INSERT_ID");
        sqlWords.add("LATERAL");
        sqlWords.add("LEAD");
        sqlWords.add("LEADING");
        sqlWords.add("LEAST");
        sqlWords.add("LEAVE");
        sqlWords.add("LEFT");
        sqlWords.add("LENGTH");
        sqlWords.add("LESS");
        sqlWords.add("LEVEL");
        sqlWords.add("LIKE");
        sqlWords.add("LIMIT");
        sqlWords.add("LINENO");
        sqlWords.add("LINES");
        sqlWords.add("LISTEN");
        sqlWords.add("LN");
        sqlWords.add("LOAD");
        sqlWords.add("LOCAL");
        sqlWords.add("LOCALTIME");
        sqlWords.add("LOCALTIMESTAMP");
        sqlWords.add("LOCATION");
        sqlWords.add("LOCATOR");
        sqlWords.add("LOCK");
        sqlWords.add("LOGIN");
        sqlWords.add("LOGS");
        sqlWords.add("LONG");
        sqlWords.add("LONGBLOB");
        sqlWords.add("LONGTEXT");
        sqlWords.add("LOOP");
        sqlWords.add("LOW_PRIORITY");
        sqlWords.add("LOWER");
        sqlWords.add("MAP");
        sqlWords.add("MATCH");
        sqlWords.add("MATCHED");
        sqlWords.add("MAX");
        sqlWords.add("MAX_ROWS");
        sqlWords.add("MAXEXTENTS");
        sqlWords.add("MAXVALUE");
        sqlWords.add("MEDIUMBLOB");
        sqlWords.add("MEDIUMINT");
        sqlWords.add("MEDIUMTEXT");
        sqlWords.add("MEMBER");
        sqlWords.add("MERGE");
        sqlWords.add("MESSAGE_LENGTH");
        sqlWords.add("MESSAGE_OCTET_LENGTH");
        sqlWords.add("MESSAGE_TEXT");
        sqlWords.add("METHOD");
        sqlWords.add("MIDDLEINT");
        sqlWords.add("MIN");
        sqlWords.add("MIN_ROWS");
        sqlWords.add("MINUS");
        sqlWords.add("MINUTE");
        sqlWords.add("MINUTE_MICROSECOND");
        sqlWords.add("MINUTE_SECOND");
        sqlWords.add("MINVALUE");
        sqlWords.add("MLSLABEL");
        sqlWords.add("MOD");
        sqlWords.add("MODE");
        sqlWords.add("MODIFIES");
        sqlWords.add("MODIFY");
        sqlWords.add("MODULE");
        sqlWords.add("MONTH");
        sqlWords.add("MONTHNAME");
        sqlWords.add("MORE");
        sqlWords.add("MOVE");
        sqlWords.add("MULTISET");
        sqlWords.add("MUMPS");
        sqlWords.add("MYISAM");
        sqlWords.add("NAME");
        sqlWords.add("NAMES");
        sqlWords.add("NATIONAL");
        sqlWords.add("NATURAL");
        sqlWords.add("NCHAR");
        sqlWords.add("NCLOB");
        sqlWords.add("NESTING");
        sqlWords.add("NEW");
        sqlWords.add("NEXT");
        sqlWords.add("NO");
        sqlWords.add("NO_WRITE_TO_BINLOG");
        sqlWords.add("NOAUDIT");
        sqlWords.add("NOCHECK");
        sqlWords.add("NOCOMPRESS");
        sqlWords.add("NOCREATEDB");
        sqlWords.add("NOCREATEROLE");
        sqlWords.add("NOCREATEUSER");
        sqlWords.add("NOINHERIT");
        sqlWords.add("NOLOGIN");
        sqlWords.add("NONCLUSTERED");
        sqlWords.add("NONE");
        sqlWords.add("NORMALIZE");
        sqlWords.add("NORMALIZED");
        sqlWords.add("NOSUPERUSER");
        sqlWords.add("NOT");
        sqlWords.add("NOTHING");
        sqlWords.add("NOTIFY");
        sqlWords.add("NOTNULL");
        sqlWords.add("NOWAIT");
        sqlWords.add("NULL");
        sqlWords.add("NULLABLE");
        sqlWords.add("NULLIF");
        sqlWords.add("NULLS");
        sqlWords.add("NUMBER");
        sqlWords.add("NUMERIC");
        sqlWords.add("OBJECT");
        sqlWords.add("OCTET_LENGTH");
        sqlWords.add("OCTETS");
        sqlWords.add("OF");
        sqlWords.add("OFF");
        sqlWords.add("OFFLINE");
        sqlWords.add("OFFSET");
        sqlWords.add("OFFSETS");
        sqlWords.add("OIDS");
        sqlWords.add("OLD");
        sqlWords.add("ON");
        sqlWords.add("ONLINE");
        sqlWords.add("ONLY");
        sqlWords.add("OPEN");
        sqlWords.add("OPENDATASOURCE");
        sqlWords.add("OPENQUERY");
        sqlWords.add("OPENROWSET");
        sqlWords.add("OPENXML");
        sqlWords.add("OPERATION");
        sqlWords.add("OPERATOR");
        sqlWords.add("OPTIMIZE");
        sqlWords.add("OPTION");
        sqlWords.add("OPTIONALLY");
        sqlWords.add("OPTIONS");
        sqlWords.add("OR");
        sqlWords.add("ORDER");
        sqlWords.add("ORDERING");
        sqlWords.add("ORDINALITY");
        sqlWords.add("OTHERS");
        sqlWords.add("OUT");
        sqlWords.add("OUTER");
        sqlWords.add("OUTFILE");
        sqlWords.add("OUTPUT");
        sqlWords.add("OVER");
        sqlWords.add("OVERLAPS");
        sqlWords.add("OVERLAY");
        sqlWords.add("OVERRIDING");
        sqlWords.add("OWNER");
        sqlWords.add("PACK_KEYS");
        sqlWords.add("PAD");
        sqlWords.add("PARAMETER");
        sqlWords.add("PARAMETER_MODE");
        sqlWords.add("PARAMETER_NAME");
        sqlWords.add("PARAMETER_ORDINAL_POSITION");
        sqlWords.add("PARAMETER_SPECIFIC_CATALOG");
        sqlWords.add("PARAMETER_SPECIFIC_NAME");
        sqlWords.add("PARAMETER_SPECIFIC_SCHEMA");
        sqlWords.add("PARAMETERS");
        sqlWords.add("PARTIAL");
        sqlWords.add("PARTITION");
        sqlWords.add("PASCAL");
        sqlWords.add("PASSWORD");
        sqlWords.add("PATH");
        sqlWords.add("PCTFREE");
        sqlWords.add("PERCENT");
        sqlWords.add("PERCENT_RANK");
        sqlWords.add("PERCENTILE_CONT");
        sqlWords.add("PERCENTILE_DISC");
        sqlWords.add("PLACING");
        sqlWords.add("PLAN");
        sqlWords.add("PLI");
        sqlWords.add("POSITION");
        sqlWords.add("POSTFIX");
        sqlWords.add("POWER");
        sqlWords.add("PRECEDING");
        sqlWords.add("PRECISION");
        sqlWords.add("PREFIX");
        sqlWords.add("PREORDER");
        sqlWords.add("PREPARE");
        sqlWords.add("PREPARED");
        sqlWords.add("PRESERVE");
        sqlWords.add("PRIMARY");
        sqlWords.add("PRINT");
        sqlWords.add("PRIOR");
        sqlWords.add("PRIVILEGES");
        sqlWords.add("PROC");
        sqlWords.add("PROCEDURAL");
        sqlWords.add("PROCEDURE");
        sqlWords.add("PROCESS");
        sqlWords.add("PROCESSLIST");
        sqlWords.add("PUBLIC");
        sqlWords.add("PURGE");
        sqlWords.add("QUOTE");
        sqlWords.add("RAID0");
        sqlWords.add("RAISERROR");
        sqlWords.add("RANGE");
        sqlWords.add("RANK");
        sqlWords.add("RAW");
        sqlWords.add("READ");
        sqlWords.add("READS");
        sqlWords.add("READTEXT");
        sqlWords.add("REAL");
        sqlWords.add("RECHECK");
        sqlWords.add("RECONFIGURE");
        sqlWords.add("RECURSIVE");
        sqlWords.add("REF");
        sqlWords.add("REFERENCES");
        sqlWords.add("REFERENCING");
        sqlWords.add("REGEXP");
        sqlWords.add("REGR_AVGX");
        sqlWords.add("REGR_AVGY");
        sqlWords.add("REGR_COUNT");
        sqlWords.add("REGR_INTERCEPT");
        sqlWords.add("REGR_R2");
        sqlWords.add("REGR_SLOPE");
        sqlWords.add("REGR_SXX");
        sqlWords.add("REGR_SXY");
        sqlWords.add("REGR_SYY");
        sqlWords.add("REINDEX");
        sqlWords.add("RELATIVE");
        sqlWords.add("RELEASE");
        sqlWords.add("RELOAD");
        sqlWords.add("RENAME");
        sqlWords.add("REPEAT");
        sqlWords.add("REPEATABLE");
        sqlWords.add("REPLACE");
        sqlWords.add("REPLICATION");
        sqlWords.add("REQUIRE");
        sqlWords.add("RESET");
        sqlWords.add("RESIGNAL");
        sqlWords.add("RESOURCE");
        sqlWords.add("RESTART");
        sqlWords.add("RESTORE");
        sqlWords.add("RESTRICT");
        sqlWords.add("RESULT");
        sqlWords.add("RETURN");
        sqlWords.add("RETURNED_CARDINALITY");
        sqlWords.add("RETURNED_LENGTH");
        sqlWords.add("RETURNED_OCTET_LENGTH");
        sqlWords.add("RETURNED_SQLSTATE");
        sqlWords.add("RETURNS");
        sqlWords.add("REVOKE");
        sqlWords.add("RIGHT");
        sqlWords.add("RLIKE");
        sqlWords.add("ROLE");
        sqlWords.add("ROLLBACK");
        sqlWords.add("ROLLUP");
        sqlWords.add("ROUTINE");
        sqlWords.add("ROUTINE_CATALOG");
        sqlWords.add("ROUTINE_NAME");
        sqlWords.add("ROUTINE_SCHEMA");
        sqlWords.add("ROW");
        sqlWords.add("ROW_COUNT");
        sqlWords.add("ROW_NUMBER");
        sqlWords.add("ROWCOUNT");
        sqlWords.add("ROWGUIDCOL");
        sqlWords.add("ROWID");
        sqlWords.add("ROWNUM");
        sqlWords.add("ROWS");
        sqlWords.add("RULE");
        sqlWords.add("SAVE");
        sqlWords.add("SAVEPOINT");
        sqlWords.add("SCALE");
        sqlWords.add("SCHEMA");
        sqlWords.add("SCHEMA_NAME");
        sqlWords.add("SCHEMAS");
        sqlWords.add("SCOPE");
        sqlWords.add("SCOPE_CATALOG");
        sqlWords.add("SCOPE_NAME");
        sqlWords.add("SCOPE_SCHEMA");
        sqlWords.add("SCROLL");
        sqlWords.add("SEARCH");
        sqlWords.add("SECOND");
        sqlWords.add("SECOND_MICROSECOND");
        sqlWords.add("SECTION");
        sqlWords.add("SECURITY");
        sqlWords.add("SELECT");
        sqlWords.add("SELF");
        sqlWords.add("SENSITIVE");
        sqlWords.add("SEPARATOR");
        sqlWords.add("SEQUENCE");
        sqlWords.add("SERIALIZABLE");
        sqlWords.add("SERVER_NAME");
        sqlWords.add("SESSION");
        sqlWords.add("SESSION_USER");
        sqlWords.add("SET");
        sqlWords.add("SETOF");
        sqlWords.add("SETS");
        sqlWords.add("SETUSER");
        sqlWords.add("SHARE");
        sqlWords.add("SHOW");
        sqlWords.add("SHUTDOWN");
        sqlWords.add("SIGNAL");
        sqlWords.add("SIMILAR");
        sqlWords.add("SIMPLE");
        sqlWords.add("SIZE");
        sqlWords.add("SMALLINT");
        sqlWords.add("SOME");
        sqlWords.add("SONAME");
        sqlWords.add("SOURCE");
        sqlWords.add("SPACE");
        sqlWords.add("SPATIAL");
        sqlWords.add("SPECIFIC");
        sqlWords.add("SPECIFIC_NAME");
        sqlWords.add("SPECIFICTYPE");
        sqlWords.add("SQL");
        sqlWords.add("SQL_BIG_RESULT");
        sqlWords.add("SQL_BIG_SELECTS");
        sqlWords.add("SQL_BIG_TABLES");
        sqlWords.add("SQL_CALC_FOUND_ROWS");
        sqlWords.add("SQL_LOG_OFF");
        sqlWords.add("SQL_LOG_UPDATE");
        sqlWords.add("SQL_LOW_PRIORITY_UPDATES");
        sqlWords.add("SQL_SELECT_LIMIT");
        sqlWords.add("SQL_SMALL_RESULT");
        sqlWords.add("SQL_WARNINGS");
        sqlWords.add("SQLCA");
        sqlWords.add("SQLCODE");
        sqlWords.add("SQLERROR");
        sqlWords.add("SQLEXCEPTION");
        sqlWords.add("SQLSTATE");
        sqlWords.add("SQLWARNING");
        sqlWords.add("SQRT");
        sqlWords.add("SSL");
        sqlWords.add("STABLE");
        sqlWords.add("START");
        sqlWords.add("STARTING");
        sqlWords.add("STATE");
        sqlWords.add("STATEMENT");
        sqlWords.add("STATIC");
        sqlWords.add("STATISTICS");
        sqlWords.add("STATUS");
        sqlWords.add("STDDEV_POP");
        sqlWords.add("STDDEV_SAMP");
        sqlWords.add("STDIN");
        sqlWords.add("STDOUT");
        sqlWords.add("STORAGE");
        sqlWords.add("STRAIGHT_JOIN");
        sqlWords.add("STRICT");
        sqlWords.add("STRING");
        sqlWords.add("STRUCTURE");
        sqlWords.add("STYLE");
        sqlWords.add("SUBCLASS_ORIGIN");
        sqlWords.add("SUBLIST");
        sqlWords.add("SUBMULTISET");
        sqlWords.add("SUBSTRING");
        sqlWords.add("SUCCESSFUL");
        sqlWords.add("SUM");
        sqlWords.add("SUPERUSER");
        sqlWords.add("SYMMETRIC");
        sqlWords.add("SYNONYM");
        sqlWords.add("SYSDATE");
        sqlWords.add("SYSID");
        sqlWords.add("SYSTEM");
        sqlWords.add("SYSTEM_USER");
        sqlWords.add("TABLE");
        sqlWords.add("TABLE_NAME");
        sqlWords.add("TABLES");
        sqlWords.add("TABLESAMPLE");
        sqlWords.add("TABLESPACE");
        sqlWords.add("TEMP");
        sqlWords.add("TEMPLATE");
        sqlWords.add("TEMPORARY");
        sqlWords.add("TERMINATE");
        sqlWords.add("TERMINATED");
        sqlWords.add("TEXT");
        sqlWords.add("TEXTSIZE");
        sqlWords.add("THAN");
        sqlWords.add("THEN");
        sqlWords.add("TIES");
        sqlWords.add("TIME");
        sqlWords.add("TIMESTAMP");
        sqlWords.add("TIMEZONE_HOUR");
        sqlWords.add("TIMEZONE_MINUTE");
        sqlWords.add("TINYBLOB");
        sqlWords.add("TINYINT");
        sqlWords.add("TINYTEXT");
        sqlWords.add("TO");
        sqlWords.add("TOAST");
        sqlWords.add("TOP");
        sqlWords.add("TOP_LEVEL_COUNT");
        sqlWords.add("TRAILING");
        sqlWords.add("TRAN");
        sqlWords.add("TRANSACTION");
        sqlWords.add("TRANSACTION_ACTIVE");
        sqlWords.add("TRANSACTIONS_COMMITTED");
        sqlWords.add("TRANSACTIONS_ROLLED_BACK");
        sqlWords.add("TRANSFORM");
        sqlWords.add("TRANSFORMS");
        sqlWords.add("TRANSLATE");
        sqlWords.add("TRANSLATION");
        sqlWords.add("TREAT");
        sqlWords.add("TRIGGER");
        sqlWords.add("TRIGGER_CATALOG");
        sqlWords.add("TRIGGER_NAME");
        sqlWords.add("TRIGGER_SCHEMA");
        sqlWords.add("TRIM");
        sqlWords.add("TRUE");
        sqlWords.add("TRUNCATE");
        sqlWords.add("TRUSTED");
        sqlWords.add("TSEQUAL");
        sqlWords.add("TYPE");
        sqlWords.add("UESCAPE");
        sqlWords.add("UID");
        sqlWords.add("UNBOUNDED");
        sqlWords.add("UNCOMMITTED");
        sqlWords.add("UNDER");
        sqlWords.add("UNDO");
        sqlWords.add("UNENCRYPTED");
        sqlWords.add("UNION");
        sqlWords.add("UNIQUE");
        sqlWords.add("UNKNOWN");
        sqlWords.add("UNLISTEN");
        sqlWords.add("UNLOCK");
        sqlWords.add("UNNAMED");
        sqlWords.add("UNNEST");
        sqlWords.add("UNSIGNED");
        sqlWords.add("UNTIL");
        sqlWords.add("UPDATE");
        sqlWords.add("UPDATETEXT");
        sqlWords.add("UPPER");
        sqlWords.add("USAGE");
        sqlWords.add("USE");
        sqlWords.add("USER");
        sqlWords.add("USER_DEFINED_TYPE_CATALOG");
        sqlWords.add("USER_DEFINED_TYPE_CODE");
        sqlWords.add("USER_DEFINED_TYPE_NAME");
        sqlWords.add("USER_DEFINED_TYPE_SCHEMA");
        sqlWords.add("USING");
        sqlWords.add("UTC_DATE");
        sqlWords.add("UTC_TIME");
        sqlWords.add("UTC_TIMESTAMP");
        sqlWords.add("VACUUM");
        sqlWords.add("VALID");
        sqlWords.add("VALIDATE");
        sqlWords.add("VALIDATOR");
        sqlWords.add("VALUE");
        sqlWords.add("VALUES");
        sqlWords.add("VAR_POP");
        sqlWords.add("VAR_SAMP");
        sqlWords.add("VARBINARY");
        sqlWords.add("VARCHAR");
        sqlWords.add("VARCHAR2");
        sqlWords.add("VARCHARACTER");
        sqlWords.add("VARIABLE");
        sqlWords.add("VARIABLES");
        sqlWords.add("VARYING");
        sqlWords.add("VERBOSE");
        sqlWords.add("VIEW");
        sqlWords.add("VOLATILE");
        sqlWords.add("WAITFOR");
        sqlWords.add("WHEN");
        sqlWords.add("WHENEVER");
        sqlWords.add("WHERE");
        sqlWords.add("WHILE");
        sqlWords.add("WIDTH_BUCKET");
        sqlWords.add("WINDOW");
        sqlWords.add("WITH");
        sqlWords.add("WITHIN");
        sqlWords.add("WITHOUT");
        sqlWords.add("WORK");
        sqlWords.add("WRITE");
        sqlWords.add("WRITETEXT");
        sqlWords.add("X509");
        sqlWords.add("XOR");
        sqlWords.add("YEAR");
        sqlWords.add("YEAR_MONTH");
        sqlWords.add("ZEROFILL");
        sqlWords.add("ZONE");

        sqlWordsIterator = sqlWords.iterator();
    }

    /**
     * @return the sqlWords
     */
    public ArrayList<String> getSqlWords() {
        return sqlWords;
    }

    /**
     * @param sqlWords the sqlWords to set
     */
    public void setSqlWords(ArrayList<String> sqlWords) {
        this.sqlWords = sqlWords;
    }
}
